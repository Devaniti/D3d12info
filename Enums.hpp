#pragma once

#include <unordered_map>

struct EnumItem
{
	const wchar_t* m_Name;
	uint32_t m_Value;
};

class EnumCollection
{
public:
	std::unordered_map<wstring, const EnumItem*> m_Enums;

	static EnumCollection& GetInstance()
	{
		static EnumCollection obj;
		return obj;
	}

	void Add(const wchar_t* enumName, const EnumItem* items)
	{
		m_Enums.insert({enumName, items});
	}
};

class EnumRegistration
{
public:
	EnumRegistration(const wchar_t* enumName, const EnumItem* items)
	{
		EnumCollection::GetInstance().Add(enumName, items);
	}
};

#define ENUM_BEGIN(name)   static const EnumItem Enum_ ## name[] = {
#define ENUM_END(name)   { NULL, UINT32_MAX } }; \
	static EnumRegistration g_Enum_ ## name ## _Registration(L"" #name, Enum_ ## name);
#define ENUM_ITEM(name)   { L"" #name, uint32_t(name) },

// If not found, returns null.
inline const wchar_t* FindEnumItemName(uint32_t value, const EnumItem* items)
{
	for(size_t i = 0; items[i].m_Name != nullptr; ++i)
	{
		if(items[i].m_Value == value)
			return items[i].m_Name;
	}
	return nullptr;
}

////////////////////////////////////////////////////////////////////////////////
// Enums

ENUM_BEGIN(D3D12_DEPTH_WRITE_MASK)
	ENUM_ITEM(D3D12_DEPTH_WRITE_MASK_ZERO)
	ENUM_ITEM(D3D12_DEPTH_WRITE_MASK_ALL)
ENUM_END(D3D12_DEPTH_WRITE_MASK)

ENUM_BEGIN(D3D12_SHADER_MIN_PRECISION_SUPPORT)
	ENUM_ITEM(D3D12_SHADER_MIN_PRECISION_SUPPORT_NONE)
	ENUM_ITEM(D3D12_SHADER_MIN_PRECISION_SUPPORT_10_BIT)
	ENUM_ITEM(D3D12_SHADER_MIN_PRECISION_SUPPORT_16_BIT)
ENUM_END(D3D12_SHADER_MIN_PRECISION_SUPPORT)

ENUM_BEGIN(D3D12_TILED_RESOURCES_TIER)
	ENUM_ITEM(D3D12_TILED_RESOURCES_TIER_NOT_SUPPORTED)
	ENUM_ITEM(D3D12_TILED_RESOURCES_TIER_1)
	ENUM_ITEM(D3D12_TILED_RESOURCES_TIER_2)
	ENUM_ITEM(D3D12_TILED_RESOURCES_TIER_3)
	ENUM_ITEM(D3D12_TILED_RESOURCES_TIER_4)
ENUM_END(D3D12_TILED_RESOURCES_TIER)

ENUM_BEGIN(D3D12_RESOURCE_BINDING_TIER)
	ENUM_ITEM(D3D12_RESOURCE_BINDING_TIER_1)
	ENUM_ITEM(D3D12_RESOURCE_BINDING_TIER_2)
	ENUM_ITEM(D3D12_RESOURCE_BINDING_TIER_3)
ENUM_END(D3D12_RESOURCE_BINDING_TIER)

ENUM_BEGIN(D3D12_CONSERVATIVE_RASTERIZATION_TIER)
	ENUM_ITEM(D3D12_CONSERVATIVE_RASTERIZATION_TIER_NOT_SUPPORTED)
	ENUM_ITEM(D3D12_CONSERVATIVE_RASTERIZATION_TIER_1)
	ENUM_ITEM(D3D12_CONSERVATIVE_RASTERIZATION_TIER_2)
	ENUM_ITEM(D3D12_CONSERVATIVE_RASTERIZATION_TIER_3)
ENUM_END(D3D12_CONSERVATIVE_RASTERIZATION_TIER)

ENUM_BEGIN(D3D12_CROSS_NODE_SHARING_TIER)
	ENUM_ITEM(D3D12_CROSS_NODE_SHARING_TIER_NOT_SUPPORTED)
	ENUM_ITEM(D3D12_CROSS_NODE_SHARING_TIER_1_EMULATED)
	ENUM_ITEM(D3D12_CROSS_NODE_SHARING_TIER_1)
	ENUM_ITEM(D3D12_CROSS_NODE_SHARING_TIER_2)
	ENUM_ITEM(D3D12_CROSS_NODE_SHARING_TIER_3)
ENUM_END(D3D12_CROSS_NODE_SHARING_TIER)

ENUM_BEGIN(D3D12_RESOURCE_HEAP_TIER)
	ENUM_ITEM(D3D12_RESOURCE_HEAP_TIER_1)
	ENUM_ITEM(D3D12_RESOURCE_HEAP_TIER_2)
ENUM_END(D3D12_RESOURCE_HEAP_TIER)

ENUM_BEGIN(DXGI_ADAPTER_FLAG)
	ENUM_ITEM(DXGI_ADAPTER_FLAG_NONE)
	ENUM_ITEM(DXGI_ADAPTER_FLAG_REMOTE)
	ENUM_ITEM(DXGI_ADAPTER_FLAG_SOFTWARE)
	ENUM_ITEM(DXGI_ADAPTER_FLAG_FORCE_DWORD)
ENUM_END(DXGI_ADAPTER_FLAG)

ENUM_BEGIN(D3D_FEATURE_LEVEL)
	ENUM_ITEM(D3D_FEATURE_LEVEL_1_0_CORE)
	ENUM_ITEM(D3D_FEATURE_LEVEL_9_1)
	ENUM_ITEM(D3D_FEATURE_LEVEL_9_2)
	ENUM_ITEM(D3D_FEATURE_LEVEL_9_3)
	ENUM_ITEM(D3D_FEATURE_LEVEL_10_0)
	ENUM_ITEM(D3D_FEATURE_LEVEL_10_1)
	ENUM_ITEM(D3D_FEATURE_LEVEL_11_0)
	ENUM_ITEM(D3D_FEATURE_LEVEL_11_1)
	ENUM_ITEM(D3D_FEATURE_LEVEL_12_0)
	ENUM_ITEM(D3D_FEATURE_LEVEL_12_1)
	ENUM_ITEM(D3D_FEATURE_LEVEL_12_2)
ENUM_END(D3D_FEATURE_LEVEL)

ENUM_BEGIN(D3D_SHADER_MODEL)
	ENUM_ITEM(D3D_SHADER_MODEL_5_1)
	ENUM_ITEM(D3D_SHADER_MODEL_6_0)
	ENUM_ITEM(D3D_SHADER_MODEL_6_1)
	ENUM_ITEM(D3D_SHADER_MODEL_6_2)
	ENUM_ITEM(D3D_SHADER_MODEL_6_3)
	ENUM_ITEM(D3D_SHADER_MODEL_6_4)
	ENUM_ITEM(D3D_SHADER_MODEL_6_5)
	ENUM_ITEM(D3D_SHADER_MODEL_6_6)
	ENUM_ITEM(D3D_SHADER_MODEL_6_7)
ENUM_END(D3D_SHADER_MODEL)

ENUM_BEGIN(D3D_ROOT_SIGNATURE_VERSION)
	ENUM_ITEM(D3D_ROOT_SIGNATURE_VERSION_1)
	ENUM_ITEM(D3D_ROOT_SIGNATURE_VERSION_1_0)
	ENUM_ITEM(D3D_ROOT_SIGNATURE_VERSION_1_1)
ENUM_END(D3D_ROOT_SIGNATURE_VERSION)

ENUM_BEGIN(D3D12_PROGRAMMABLE_SAMPLE_POSITIONS_TIER)
	ENUM_ITEM(D3D12_PROGRAMMABLE_SAMPLE_POSITIONS_TIER_NOT_SUPPORTED)
	ENUM_ITEM(D3D12_PROGRAMMABLE_SAMPLE_POSITIONS_TIER_1)
	ENUM_ITEM(D3D12_PROGRAMMABLE_SAMPLE_POSITIONS_TIER_2)
ENUM_END(D3D12_PROGRAMMABLE_SAMPLE_POSITIONS_TIER)

ENUM_BEGIN(D3D12_SHADER_CACHE_SUPPORT_FLAGS)
	ENUM_ITEM(D3D12_SHADER_CACHE_SUPPORT_NONE)
	ENUM_ITEM(D3D12_SHADER_CACHE_SUPPORT_SINGLE_PSO)
	ENUM_ITEM(D3D12_SHADER_CACHE_SUPPORT_LIBRARY)
	ENUM_ITEM(D3D12_SHADER_CACHE_SUPPORT_AUTOMATIC_INPROC_CACHE)
	ENUM_ITEM(D3D12_SHADER_CACHE_SUPPORT_AUTOMATIC_DISK_CACHE)
	ENUM_ITEM(D3D12_SHADER_CACHE_SUPPORT_DRIVER_MANAGED_CACHE)
ENUM_END(D3D12_SHADER_CACHE_SUPPORT_FLAGS)

ENUM_BEGIN(D3D12_COMMAND_LIST_SUPPORT_FLAGS)
	ENUM_ITEM(D3D12_COMMAND_LIST_SUPPORT_FLAG_NONE)
	ENUM_ITEM(D3D12_COMMAND_LIST_SUPPORT_FLAG_DIRECT)
	ENUM_ITEM(D3D12_COMMAND_LIST_SUPPORT_FLAG_BUNDLE)
	ENUM_ITEM(D3D12_COMMAND_LIST_SUPPORT_FLAG_COMPUTE)
	ENUM_ITEM(D3D12_COMMAND_LIST_SUPPORT_FLAG_COPY)
	ENUM_ITEM(D3D12_COMMAND_LIST_SUPPORT_FLAG_VIDEO_DECODE)
	ENUM_ITEM(D3D12_COMMAND_LIST_SUPPORT_FLAG_VIDEO_PROCESS)
	ENUM_ITEM(D3D12_COMMAND_LIST_SUPPORT_FLAG_VIDEO_ENCODE)
ENUM_END(D3D12_COMMAND_LIST_SUPPORT_FLAGS)

ENUM_BEGIN(D3D12_VIEW_INSTANCING_TIER)
	ENUM_ITEM(D3D12_VIEW_INSTANCING_TIER_NOT_SUPPORTED)
	ENUM_ITEM(D3D12_VIEW_INSTANCING_TIER_1)
	ENUM_ITEM(D3D12_VIEW_INSTANCING_TIER_2)
	ENUM_ITEM(D3D12_VIEW_INSTANCING_TIER_3)
ENUM_END(D3D12_VIEW_INSTANCING_TIER)

ENUM_BEGIN(D3D12_SHARED_RESOURCE_COMPATIBILITY_TIER)
	ENUM_ITEM(D3D12_SHARED_RESOURCE_COMPATIBILITY_TIER_0)
	ENUM_ITEM(D3D12_SHARED_RESOURCE_COMPATIBILITY_TIER_1)
	ENUM_ITEM(D3D12_SHARED_RESOURCE_COMPATIBILITY_TIER_2)
ENUM_END(D3D12_SHARED_RESOURCE_COMPATIBILITY_TIER)

ENUM_BEGIN(D3D12_RENDER_PASS_TIER)
	ENUM_ITEM(D3D12_RENDER_PASS_TIER_0)
	ENUM_ITEM(D3D12_RENDER_PASS_TIER_1)
	ENUM_ITEM(D3D12_RENDER_PASS_TIER_2)
ENUM_END(D3D12_RENDER_PASS_TIER)

ENUM_BEGIN(D3D12_RAYTRACING_TIER)
	ENUM_ITEM(D3D12_RAYTRACING_TIER_NOT_SUPPORTED)
	ENUM_ITEM(D3D12_RAYTRACING_TIER_1_0)
	ENUM_ITEM(D3D12_RAYTRACING_TIER_1_1)
ENUM_END(D3D12_RAYTRACING_TIER)

ENUM_BEGIN(D3D12_VARIABLE_SHADING_RATE_TIER)
	ENUM_ITEM(D3D12_VARIABLE_SHADING_RATE_TIER_NOT_SUPPORTED)
	ENUM_ITEM(D3D12_VARIABLE_SHADING_RATE_TIER_1)
	ENUM_ITEM(D3D12_VARIABLE_SHADING_RATE_TIER_2)
ENUM_END(D3D12_VARIABLE_SHADING_RATE_TIER)

ENUM_BEGIN(D3D12_MESH_SHADER_TIER)
	ENUM_ITEM(D3D12_MESH_SHADER_TIER_NOT_SUPPORTED)
	ENUM_ITEM(D3D12_MESH_SHADER_TIER_1)
ENUM_END(D3D12_MESH_SHADER_TIER)

ENUM_BEGIN(D3D12_SAMPLER_FEEDBACK_TIER)
	ENUM_ITEM(D3D12_SAMPLER_FEEDBACK_TIER_NOT_SUPPORTED)
	ENUM_ITEM(D3D12_SAMPLER_FEEDBACK_TIER_0_9)
	ENUM_ITEM(D3D12_SAMPLER_FEEDBACK_TIER_1_0)
ENUM_END(D3D12_SAMPLER_FEEDBACK_TIER)

ENUM_BEGIN(D3D12_WAVE_MMA_TIER)
	ENUM_ITEM(D3D12_WAVE_MMA_TIER_NOT_SUPPORTED)
	ENUM_ITEM(D3D12_WAVE_MMA_TIER_1_0)
ENUM_END(D3D12_WAVE_MMA_TIER)
